name: test

on:
  pull_request

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install -g npm@10.3.0
          npm ci --force

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker buildx create --use && docker buildx build --platform linux/amd64 -t your-image-name:latest .

      - name: Start Docker Compose
        run: sudo docker compose up -d
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USERNAME: ${{ secrets.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          ACCESSTOKEN_SECRET_KEY: ${{ secrets.ACCESSTOKEN_SECRET_KEY }}
          ACCESSTOKEN_EXPIRATION_TIME: ${{ secrets.ACCESSTOKEN_EXPIRATION_TIME }}
          REFRESHTOKEN_SECRET_KEY: ${{ secrets.REFRESHTOKEN_SECRET_KEY }}
          REFRESHTOKEN_EXPIRATION_TIME: ${{ secrets.REFRESHTOKEN_EXPIRATION_TIME }}
          KAKAO_AUTH_CLIENTID: ${{ secrets.KAKAO_AUTH_CLIENTID }}
          KAKAO_AUTH_CALLBACK_URL: ${{ secrets.KAKAO_AUTH_CALLBACK_URL }}
          AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_S3_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
          AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
