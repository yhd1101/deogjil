name: testAndDeploy

on:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install -g npm@10.3.0
          npm ci --force

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker buildx create --use && docker buildx build --platform linux/amd64 -t your-image-name:latest .

      - name: Set up environment variables
        run: |
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "ACCESSTOKEN_SECRET_KEY=${{ secrets.ACCESSTOKEN_SECRET_KEY }}" >> .env
          echo "ACCESSTOKEN_EXPIRATION_TIME=${{ secrets.ACCESSTOKEN_EXPIRATION_TIME }}" >> .env
          echo "REFRESHTOKEN_SECRET_KEY=${{ secrets.REFRESHTOKEN_SECRET_KEY }}" >> .env
          echo "REFRESHTOKEN_EXPIRATION_TIME=${{ secrets.REFRESHTOKEN_EXPIRATION_TIME }}" >> .env
          echo "KAKAO_AUTH_CLIENTID=${{ secrets.KAKAO_AUTH_CLIENTID }}" >> .env
          echo "KAKAO_AUTH_CALLBACK_URL=${{ secrets.KAKAO_AUTH_CALLBACK_URL }}" >> .env
          echo "AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }}" >> .env
          echo "AWS_S3_SECRET_KEY=${{ secrets.AWS_S3_SECRET_KEY }}" >> .env
          echo "AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}" >> .env
          echo "AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env

      - name: Start Docker Compose
        run: sudo docker compose up -d

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Set up SSH
        run: |
          echo "${{ secrets.SSH_KNOWN_HOST }}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      - name: Deploy
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_PUBLIC_IP }} "
            cd deogjil
            git pull
          
          
          "
